using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Scen3
{
    class DataProvider
    {
        public static readonly int NumberOfFields = 64;
        public static readonly int NumberOfFieldsX = 8;
        public static readonly int NumberOfFieldsY = 8;

        public static readonly String[] Emotikony = new String[4] { ":)", ":'(", "o_O", ":V" };
        public static double[,,] Data = new double [,,]{
            {
                { 0,0,0.66,0.66,0.66,0.66,0,0 },
                { 0,0.66,0.33,0.33,0.33,0.33,0.66,0 },
                { 0.66,0.33,1,0.33,0.33,1,0.33,0.66 },
                { 0.66,0.33,0.33,0.33,0.33,0.33,0.33,0.66 },
                { 0.66,0.33,1,0.33,0.33,1,0.33,0.66 },
                { 0.66,0.33,0.33,1,1,0.33,0.33,0.66 },
                { 0,0.66,0.33,0.33,0.33,0.33,0.66,0 },
                { 0,0,0.66,0.66,0.66,0.66,0,0 }
            },

            {
                { 0,0,0.66,0.66,0.66,0.66,0,0 },
                { 0,0.66,0.33,0.33,0.33,0.33,0.66,0 },
                { 0.66,0.33,1,0.33,0.33,1,0.33,0.66 },
                { 0.66,0.33,0.66,0.33,0.33,0.66,0.33,0.66 },
                { 0.66,0.33,0.66,0.33,0.33,0.66,0.33,0.66 },
                { 0.66,0.33,0.33,1,1,0.33,0.33,0.66 },
                { 0,0.66,1,0.33,0.33,1,0.66,0 },
                { 0,0,0.66,0.66,0.66,0.66,0,0 }
            },

            {
                { 0,0,0.66,0.66,0.66,0.66,0,0 },
                { 0,0.66,0.33,0.33,1,1,0.66,0 },
                { 0.66,0.33,1,0.33,1,1,0.33,0.66 },
                { 0.66,0.33,1,0.33,1,1,0.33,0.66 },
                { 0.66,0.33,0.33,0.33,0.33,0.33,0.33,0.66 },
                { 0.66,0.33,1,1,1,1,0.33,0.66 },
                { 0,0.66,0.33,0.33,0.33,0.33,0.66,0 },
                { 0,0,0.66,0.66,0.66,0.66,0,0 }
            },

            {
                { 0,0.66,0.66,0.66,0.66,0.66,0,0 },
                { 0.66,0.33,0.33,1,0.33,0.33,0.66,0 },
                { 0.66,1,0.33,1,0.33,0.33,0.33,0.66 },
                { 0.66,1,0.33,0.33,0.33,1,0.33,0.66 },
                { 0.66,0.33,0.33,1,1,0.33,0.33,0.66 },
                { 0.66,0.33,1,0.33,0.33,0.33,0.33,0.66 },
                { 0.66,1,1,1,1,1,0.33,0.66 },
                { 0,0.66,0.66,0.66,0.66,0.66,0.66,0 }
            }
        };
        public static double[] DataExpected = { 0, 1, 2, 3 };
        public static double[] TestDataExpected = { 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3 };
        public static double[,,] TestData = new double [,,]{
    {
        { 0,0,0.66,0.66,0.66,0.66,0,0 },
        { 0,0.66,0,0,0,0,0.66,0 },
        { 0.66,0,1,0,0,1,0,0.66 },
        { 0.66,0,0,0,0,0,0,0.66 },
        { 0.66,0,1,0,0,1,0,0.66 },
        { 0.66,0,0,1,1,0,0,0.66 },
        { 0,0.66,0,0,0,0,0.66,0 },
        { 0,0,0.66,0.66,0.66,0.66,0,0 }
    },
    {
        { 0,0,0.66,0.66,0.66,0.66,0,0 },
        { 0,0.66,0,0,0,0,0.66,0 },
        { 0.66,0,1,0,0,1,0,0.66 },
        { 0.66,0,0.66,0,0,0.66,0,0.66 },
        { 0.66,0,0.66,0,0,0.66,0,0.66 },
        { 0.66,0,0,1,1,0.66,0,0.66 },
        { 0,0.66,1,0,0,1,0.66,0 },
        { 0,0,0.66,0.66,0.66,0.66,0,0 }
    },
    {
        { 0,0,0.66,0.66,0.66,0.66,0,0 },
        { 0,0.66,1,1,0,0,0.66,0 },
        { 0.66,0,1,1,0,1,0,0.66 },
        { 0.66,0,1,1,0,1,0,0.66 },
        { 0.66,0,0,0,0,0,0,0.66 },
        { 0.66,0,1,1,1,1,0,0.66 },
        { 0,0.66,0,0,0,0,0.66,0 },
        { 0,0,0.66,0.66,0.66,0.66,0,0 }
    },
    {
        { 0,0.66,0.66,0.66,0.66,0.66,0,0 },
        { 0.66,1,0,1,0,0,0.66,0 },
        { 0.66,1,0,1,0,0,0,0.66 },
        { 0.66,1,0,0,0,1,0,0.66 },
        { 0.66,0,0,1,1,0.33,0,0.66 },
        { 0.66,0,1,0.33,0.33,0.33,0,0.66 },
        { 0.66,1,1,1,1,1,1,0.66 },
        { 0,0.66,0.66,0.66,0.66,0.66,0.66,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,1,0,0,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,1,0,0,0,0,1,0 },
        { 0,1,0,0,0,0,1,0 },
        { 0,0,1,1,1,1,0,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,1,1,0,0,1,1,0 },
        { 0,1,1,0,0,1,1,0 },
        { 0,0.66,0.66,0,0,0.66,0.66,0 },
        { 0,0.66,0.66,0,0,0.66,0.66,0 },
        { 0,0,1,1,1,1,0,0 },
        { 0,1,0,0,0,0,1,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,1,1,0,0 },
        { 0,0,1,0,1,1,0,0 },
        { 0,0,1,0,1,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,1,0,0,0,0 },
        { 0,1,0,1,0,0,1,0 },
        { 0,1,0,0,0,1,0,0 },
        { 0,0,0,1,1,0,0,0 },
        { 0,0,1,0,0,0,0,0 },
        { 0,1,1,1,1,1,1,0 },
        { 0,0,0,0,0,0,0,0 }
    },
        {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,1,0,0,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,1,0,0,1,0,0 },
        { 0,0,0,1,1,0,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,1,0,0,1,0,0 },
        { 0,0,0.66,0,0,0.66,0,0 },
        { 0,0,0.66,0,0,0.66,0,0 },
        { 0,0,0,1,1,0,0,0 },
        { 0,0,1,0,0,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,1,1,0,0 },
        { 0,0,1,0,1,1,0,0 },
        { 0,0,1,0,1,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,1,1,1,1,0,0 },
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,0,0,0,0,0 }
    },
    {
        { 0,0,0,0,0,0,0,0 },
        { 0,0,0,1,0,0,0,0 },
        { 0,1,0,1,0,0,0,0 },
        { 0,1,0,0,0,1,0,0 },
        { 0,0,0,1,1,0,0,0 },
        { 0,0,1,0,0,0,0,0 },
        { 0,1,1,1,1,1,0,0 },
        { 0,0,0,0,0,0,0,0 }
    }
};
        public static double[] GetData(int number, double[,,] data)
        {
            double[] result = new double[NumberOfFields];
            for (int i = 0; i < NumberOfFieldsY; i++)
            {
                for (int j = 0; j < NumberOfFieldsX; j++)
                {
                    result[i * NumberOfFieldsX + j] = data[number, i, j];
                }
            }

            return result;
        }
    }
}
